{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAIA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,gBAC/BC,UAAWF,SAASC,cAAc,YAClCE,eAAgBH,SAASC,cAAc,gBACvCG,cAAeJ,SAASC,cAAc,cAGxC,IAAII,EACAC,EAAO,EACXR,EAAKK,eAAeI,UAAUC,IAAI,aAwClCV,EAAKC,OAAOU,iBAAiB,UAtCRC,MAAMC,IACzBA,EAAEC,iBACFN,EAAO,EACPD,EAAQM,EAAEE,cAAcC,SAASC,YAAYC,MAE7C,MAAMjB,OAAEA,EAAMG,UAAEA,EAASC,eAAEA,GAAmBL,EAC9CI,EAAUe,UAAY,GAEtB,IACE,MAAMC,QAAa,EAAAtB,EAAAuB,SAAU,C,MAAEd,E,KAAOC,IACtC,GAAyB,IAArBY,EAAKE,KAAKC,OAIZ,YAHAC,EAAAC,OAAOC,QACL,4EAIJF,EAAAC,OAAOE,QAAQ,aAAaP,EAAKQ,mBACjC,EAAAC,EAAAR,SAAeD,GACfU,EAASC,QAAQ1B,GACjBJ,EAAO+B,O,CACP,MAAOC,GACPT,EAAAC,OAAOC,QAAQO,EAAMC,Q,KAyBzB,IAMIJ,EAAW,IAAIK,sBAZIC,IACjBA,EAAQ,GAAGC,gBAhBDzB,OAAMC,IACpBL,GAAQ,EACR,IACE,MAAMY,QAAa,EAAAtB,EAAAuB,SAAU,C,MAAEd,E,KAAOC,IAClC8B,KAAKC,MAAMnB,EAAKQ,MAAQ,MAAQpB,GAClCgB,EAAAC,OAAOe,KAAK,sBAEd,EAAAX,EAAAR,SAAeD,E,CACf,MAAOa,GACPT,EAAAC,OAAOC,QAAQO,EAAMC,Q,GAQrBO,EAAS,GAIC,CACZC,KAAM,KACNC,WAAY,oBACZC,UAAW","sources":["src/js/scroll.js"],"sourcesContent":["import fetchData from './api';\nimport onFetchSuccess from './common';\nimport { Notify } from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('#search-form'),\n  galleryEl: document.querySelector('.gallery'),\n  addMoreWrapper: document.querySelector('.btn-wrapper'),\n  addMoreButton: document.querySelector('.add-more'),\n};\n\nlet query;\nlet page = 1;\nrefs.addMoreWrapper.classList.add('is-hidden');\n\nconst onFormSubmit = async e => {\n  e.preventDefault();\n  page = 1;\n  query = e.currentTarget.elements.searchQuery.value;\n\n  const { formEl, galleryEl, addMoreWrapper } = refs;\n  galleryEl.innerHTML = '';\n\n  try {\n    const data = await fetchData({ query, page });\n    if (data.hits.length === 0) {\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n    Notify.success(`There are ${data.total} results.`);\n    onFetchSuccess(data);\n    observer.observe(addMoreWrapper);\n    formEl.reset();\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nconst addMore = async e => {\n  page += 1;\n  try {\n    const data = await fetchData({ query, page });\n    if (Math.floor(data.total / 40) === page) {\n      Notify.info('End of collection');\n    }\n    onFetchSuccess(data);\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nconst loadMoreScroll = entries => {\n  if (entries[0].isIntersecting) {\n    addMore();\n  }\n};\n\nlet options = {\n  root: null,\n  rootMargin: '0px 0px 600px 0px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(loadMoreScroll, options);\n"],"names":["$7rYDH","parcelRequire","$22b277e67ad1df42$var$refs","formEl","document","querySelector","galleryEl","addMoreWrapper","addMoreButton","$22b277e67ad1df42$var$query","$22b277e67ad1df42$var$page","classList","add","addEventListener","async","e","preventDefault","currentTarget","elements","searchQuery","value","innerHTML","data","default","hits","length","$1GAPJ","Notify","failure","success","total","$7EEHk","$22b277e67ad1df42$var$observer","observe","reset","error","message","IntersectionObserver","entries","isIntersecting","Math","floor","info","$22b277e67ad1df42$var$addMore","root","rootMargin","threshold"],"version":3,"file":"scroll.c9468b7e.js.map"}